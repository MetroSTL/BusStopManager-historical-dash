{"version":3,"sources":["component/AllStops.js","component/formatDate.js","component/StopHistory.js","component/SurveyRecord.js","component/PopupSurvey.js","component/Search.js","hooks/getRecords.js","hooks/filterRecords.js","component/Dashboard.js","assets/metrologo.png","assets/login.svg","component/TopBar.js","App.js","reportWebVitals.js","index.js"],"names":["AllStops","props","stops","setStopSelection","setSurveyDetails","stopid","a","useEffect","console","log","className","map","stop","onClick","e","attributes","routes","LocationOn","color","LocationOff","stopname","formatDate","d","date","Date","formattedDate","getDate","slice","getMonth","getFullYear","toString","substr","StopHistory","stopIDHistory","stop_id","stop_name","last_edited_date","SurveyRecord","surveyDetails","setShowSurvey","setSurveyURL","token","surveyURL","bench","shelter","parseInt","globalid","CloseSurvey","setShowCloseAlert","style","top","left","transform","preventDefault","clickYes","clickNo","PopupSurvey","useState","showCloseAlert","id","right","height","src","Search","setSearch","setStopIDHistory","marginLeft","marginRight","TextField","onChange","target","value","textInput","label","type","getRecords","t","stops_url","ghoststops_url","axios","get","then","resp","data","features","ghost","concat","busstops","filterRecords","bsm_url","Dashboard","search","stopSelection","setStops","showSurvey","length","TopBar","signedIn","setUser","user","setToken","setSignedIn","fullHash","document","location","hash","split","params","JSON","parse","decodeURI","replace","username","access_token","load","class","MetroLogo","alt","redirectUri","process","clientID","window","href","encodeURIComponent","loginIcon","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42c67747.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {LocationOn, LocationOff} from '@material-ui/icons';\r\n\r\nfunction AllStops(props) {\r\n    const {stops, setStopSelection, setSurveyDetails} = props;\r\n\r\n    async function onClick(stopid) {\r\n        setStopSelection(stopid);\r\n        setSurveyDetails('')\r\n    } \r\n\r\n    useEffect(async() => {\r\n        console.log(\"AllStops\", await stops)\r\n      }, [stops])\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Matching Stops</h2>\r\n            <div className='m-0 w-100'>\r\n                {stops ?\r\n                stops.map(stop=>{\r\n                    return (\r\n                        <li key={stop.attributes.stopid} className='item flex flex-column border-b-2 py-6 m-0 w-100' onClick={e=>onClick(stop.attributes.stopid)}>\r\n                            {stop.attributes.routes ? <LocationOn className=\" align-middle\" color='primary'/> : <LocationOff color='secondary' className=\" align-middle\" />}\r\n                            \r\n                            <li className='flex flex-column mx-auto text-left w-5/6 px-2'>\r\n                                <ul>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopID: </b> {' ' + stop.attributes.stopid} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopName: </b> {stop.attributes.stopname} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>Status: </b> {stop.attributes.routes ? 'Active' : 'Ghoststop'} \r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </li>\r\n                )}) :\r\n            ''\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllStops\r\n","export default function formatDate(d) {\r\n    let date = new Date(d)\r\n    \r\n    // Format day/month/year to two digits\r\n    var formattedDate = ('0' + date.getDate()).slice(-2);\r\n    var formattedMonth = ('0' + (date.getMonth() + 1)).slice(-2);\r\n    var formattedYear = date.getFullYear().toString().substr(2,2);\r\n\r\n    // Combine and format date string\r\n    return formattedMonth + '/' + formattedDate + '/' + formattedYear;\r\n\r\n} ","import React, {useState, useEffect} from 'react'\r\nimport formatDate from './formatDate';\r\n\r\nexport default function StopHistory(props){\r\n    const {stopIDHistory, setSurveyDetails} = props;\r\n\r\n    const onClick = (stop) => {\r\n        console.log(stop)\r\n        setSurveyDetails(stop)\r\n    }\r\n\r\n    useEffect(async() => {\r\n        console.log(\"StopHistoryID\", await stopIDHistory)\r\n      }, [stopIDHistory])\r\n\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Stop History</h2>\r\n            {stopIDHistory ?\r\n            stopIDHistory.map(stop=>{\r\n                    return (\r\n                        <a key={stop.attributes.stop_id} className='item flex flex-column border-b-2 py-6 m-0 w-100' onClick={e=>onClick(stop)}>\r\n                            \r\n                            <li className='flex flex-column mx-auto text-left w-5/6 px-2'>\r\n                                <ul>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopID: </b> {' ' + stop.attributes.stop_id} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>StopName: </b> {stop.attributes.stop_name} \r\n                                    </li>\r\n                                    <li className='flex flex-row '>\r\n                                        <b>Last Edit: </b> {`${formatDate(stop.attributes.last_edited_date)}`} \r\n                                    </li>\r\n                                </ul>\r\n                            </li>\r\n                        </a>\r\n                )}) :\r\n            ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport formatDate from './formatDate'\r\n\r\nexport default function SurveyRecord({surveyDetails, setShowSurvey, setSurveyURL, surveyURL, token}) {\r\n\r\n    const surveyID = '5112a8568fc34207b4a1b6b8c3777633'\r\n    const portalURL = 'https://maps.metrostlouis.org/arcgis'\r\n\r\n    const revealSurvey = (e, globalid) => {\r\n        console.log(globalid)\r\n        setSurveyURL(`https://survey123.arcgis.com/share/${surveyID}?portalUrl=${portalURL}&mode=edit&globalId=${globalid}&token=${token}`)\r\n        setShowSurvey(true)\r\n    }\r\n\r\n    return (\r\n        <div className='panel'>\r\n            <h2 className=\"text-lg my-4 underline\">Survey Record</h2>\r\n            {!surveyDetails ? '' :\r\n            <div>\r\n                <h3><b>Stop ID: </b>{surveyDetails.attributes.stop_id}</h3>\r\n                <h3><b>Stop Name: </b>{surveyDetails.attributes.stop_name}</h3>\r\n                <h3><b>Bench: </b>{surveyDetails.attributes.bench}</h3>\r\n                <h3><b>Shelter: </b>{surveyDetails.attributes.shelter}</h3>\r\n                <h3><b>Last Edit Date: </b>{formatDate(parseInt(1609185748773))}</h3>\r\n                <button className='border-2 p-5 ml-3 mt-3' onClick={e=>revealSurvey(e, surveyDetails.attributes.globalid)}>Full Survey</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nfunction CloseSurvey({setShowCloseAlert, setShowSurvey, setSurveyURL}) {\r\n\r\n    const clickYes = (e) => {\r\n        e.preventDefault()\r\n        setShowCloseAlert(false)\r\n        setShowSurvey(false)\r\n    }\r\n    const clickNo = (e) => {\r\n        e.preventDefault()\r\n        setShowCloseAlert(false)\r\n    }\r\n\r\n    return (\r\n        <div className='bg-white w-1/2 h-1/2 p-4 rounded-md border-2 absolute boarder-black' style={{top: '50%', left: '50%', transform: 'translateX(-50%)'}}>   \r\n            <h2>Would you like to close the survey? All unsaved data will be lost</h2>\r\n            <button className='border-2 p-5 ml-3 mt-3 boarder-black' onClick={e=>clickYes(e)}>Yes</button>\r\n            <button className='border-2 p-5 ml-3 mt-3 boarder-black' onClick={e=>clickNo(e)}>No</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function PopupSurvey({surveyURL, setShowSurvey, setSurveyURL}) {\r\n    const [showCloseAlert, setShowCloseAlert] = useState(false);\r\n\r\n    return (\r\n        <div id='popup-survey' className='bg-white w-3/4 h-2/3 absolute bg-white w-1/2 h-full p-4 rounded-md border-2 absolute' style={{top: '5%', right: '15%', height:'85vh'}}>\r\n            <iframe className='w-full h-full' src={surveyURL}></iframe>\r\n            <div id='close-iframe'>\r\n                <button className='border-2 p-5 ml-3 mt-8 boarder-black' onClick={e=>setShowCloseAlert(true)}>Close</button>\r\n            </div>\r\n            {showCloseAlert ? \r\n                <CloseSurvey \r\n                    setShowSurvey={setShowSurvey} \r\n                    setShowCloseAlert={setShowCloseAlert} /> :\r\n                '' }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport function Search({setSearch, setStopIDHistory}) {\r\n    \r\n    function textInput(e) {\r\n        e.preventDefault()\r\n        \r\n        setStopIDHistory('')\r\n        setSearch(e.target.value)\r\n    }\r\n\r\n    return (\r\n            <div id='init-search' className=\"w-70\" style={{marginLeft:'auto', marginRight:'auto'}}>\r\n            <form id=\"form-search\" className=\"px-40 black-80\">\r\n                <div className=\"measure\" className='mx-auto pt-3'>\r\n                    <TextField onChange={e=>textInput(e)} id=\"standard-search\" label=\"StopID Search\" type=\"number\" />\r\n                </div>       \r\n            </form>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import axios from 'axios'\r\n\r\nconst getRecords = async (t, id) => {\r\n    const stops_url = `https://maps.metrostlouis.org/arcserver/rest/services/Hosted/MetroBusStops_REGISTERED/FeatureServer/0/query?where=cast%28stopid+as+varchar%2810%29%29+LIKE+%27%25${id}%25%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&distance=&units=esriSRUnit_Foot&relationParam=&outFields=signid%2C+stopid%2C+stopname%2C+onst%2C+atst%2C+routes%2C+gps_lat%2C+gps_lon&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&outSR=&havingClause=&gdbVersion=&historicMoment=&returnDistinctValues=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&multipatchOption=xyFootprint&resultOffset=&resultRecordCount=&returnTrueCurves=false&returnCentroid=false&sqlFormat=none&resultType=&datumTransformation=&f=pjson&token=${t}`\r\n    const ghoststops_url = `https://maps.metrostlouis.org/arcserver/rest/services/Hosted/MetroBusGhostStops_REGISTERED/FeatureServer/0/query?where=cast%28stopid+as+varchar%2810%29%29+LIKE+%27%25${id}%25%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&distance=&units=esriSRUnit_Foot&relationParam=&outFields=signid%2C+stopid%2C+stopname%2C+onst%2C+atst%2C+gps_lat%2C+gps_lon&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&outSR=&havingClause=&gdbVersion=&historicMoment=&returnDistinctValues=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&multipatchOption=xyFootprint&resultOffset=&resultRecordCount=&returnTrueCurves=false&returnCentroid=false&sqlFormat=none&resultType=&datumTransformation=&f=pjson&token=${t}`\r\n\r\n    let busstops = await axios.get(stops_url).then(resp => resp.data.features)\r\n        .then(async features =>{\r\n            let ghost = await axios.get(ghoststops_url).then(resp => resp.data.features)\r\n            return await features.concat(await ghost)\r\n        })\r\n\r\n    return await busstops;\r\n\r\n\r\n};\r\n\r\nexport default getRecords;","import axios from 'axios'\r\n\r\nconst filterRecords = async (token, id) => {\r\n\r\n    const bsm_url = `https://maps.metrostlouis.org/arcserver/rest/services/Hosted/bus_stop_manager_fc_View/FeatureServer/0/query?where=cast%28stop_id+as+varchar%2810%29%29+LIKE+%27%25${id}%25%27&objectIds=&time=&geometry=&geometryType=esriGeometryEnvelope&inSR=&spatialRel=esriSpatialRelIntersects&distance=&units=esriSRUnit_Foot&relationParam=&outFields=*&returnGeometry=true&maxAllowableOffset=&geometryPrecision=&outSR=&havingClause=&gdbVersion=&historicMoment=&returnDistinctValues=false&returnIdsOnly=false&returnCountOnly=false&returnExtentOnly=false&orderByFields=&groupByFieldsForStatistics=&outStatistics=&returnZ=false&returnM=false&multipatchOption=xyFootprint&resultOffset=&resultRecordCount=&returnTrueCurves=false&returnCentroid=false&sqlFormat=none&resultType=&datumTransformation=&f=pjson&token=${token}`\r\n    \r\n    return await axios.get(bsm_url).then(resp => resp.data.features);\r\n};\r\n\r\nexport default filterRecords;","import React, {useState, useEffect} from 'react'\r\nimport AllStops from './AllStops'\r\nimport StopHistory from './StopHistory'\r\nimport SurveyRecord from './SurveyRecord'\r\nimport PopupSurvey from './PopupSurvey'\r\nimport Search from './Search'\r\nimport getRecords from '../hooks/getRecords';\r\nimport filterRecords from '../hooks/filterRecords'\r\n\r\nexport default function Dashboard(props) {\r\n    const [search, setSearch] = useState('');\r\n    const [stopSelection, setStopSelection] = useState('');\r\n    const [stopIDHistory, setStopIDHistory] = useState('');\r\n    const [surveyDetails, setSurveyDetails] = useState('');\r\n    const [stops, setStops] = useState([]);\r\n    const [showSurvey, setShowSurvey] = useState(false);\r\n    const [surveyURL, setSurveyURL] = useState('');\r\n    \r\n    const {token} = props;\r\n\r\n    // page load\r\n    useEffect(async () => {\r\n        setStopIDHistory([])\r\n        setStopSelection('')\r\n        setSurveyDetails('')\r\n        setStops([])\r\n    }, [])\r\n    \r\n    // updated search\r\n    useEffect(async () => {\r\n        search.length > 2? \r\n            setStops(await getRecords(token, search)) : \r\n            setStops([])\r\n    }, [search])\r\n\r\n    // click on AllStops\r\n    useEffect(async () => {\r\n        setStopIDHistory(await filterRecords(token, stopSelection) )\r\n\r\n    }, [stopSelection])\r\n\r\n\r\n    \r\n    return (\r\n        <div className='' >\r\n            <div className='w-100 flex search'>\r\n                <Search setSearch={setSearch} setStopIDHistory={setStopIDHistory} />\r\n            </div>\r\n            <div className='flex dashboard'>\r\n                <AllStops token={token} setStopSelection={setStopSelection} setSurveyDetails={setSurveyDetails} stops={stops} />\r\n                <StopHistory stopIDHistory={stopIDHistory} setSurveyDetails={setSurveyDetails} />\r\n                <SurveyRecord surveyDetails={surveyDetails} setShowSurvey={setShowSurvey} setSurveyURL={setSurveyURL} surveyURL={surveyURL} token={token}/>\r\n                {showSurvey ? \r\n                    <PopupSurvey surveyURL={surveyURL} setShowSurvey={setShowSurvey} /> :\r\n                    ''\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/metrologo.2030a298.png\";","export default __webpack_public_path__ + \"static/media/login.c1b9acc4.svg\";","import MetroLogo from '../assets/metrologo.png'\r\nimport loginIcon from '../assets/login.svg';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\n\r\nexport default function TopBar({signedIn, setUser, user, token, setToken, setSignedIn}) {\r\n\r\n    const load = () => {\r\n        // login restriction logic\r\n        const fullHash = document.location.hash.split('#')[1];\r\n    \r\n        if (fullHash) {\r\n          const params = JSON.parse('{\"' + decodeURI(fullHash).replace(/\"/g, '\\\\\"').replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}');\r\n          setSignedIn(true);\r\n          setUser(params.username.replace('%40','@'));\r\n          return params.access_token\r\n        } else {\r\n          return '';\r\n        }\r\n      };\r\n      \r\n      const getToken = () => {\r\n        var redirectUri = `${process.env.REACT_APP_REDIRECT_URI}`;\r\n        var clientID = `${process.env.REACT_APP_ID}`;\r\n        window.location.href = 'https://maps.metrostlouis.org/arcgis/sharing/rest/oauth2/authorize?client_id=' + clientID + '&response_type=token&expiration=1440&redirect_uri=' + window.encodeURIComponent(redirectUri) + 'oauth-window' +'height=400,width=600,menubar=no,location=yes,resizable=yes,scrollbars=yes,status=yes';\r\n      };\r\n    \r\n      useEffect(() => {\r\n        setToken(load());\r\n      }, [token])\r\n\r\n    return (\r\n        <div id=\"top-bar\" class=\"w-100 flex my-4 p-4 justify-between h-16 align-middle\">\r\n            <h3>{signedIn ? user : 'Please Sign in' }</h3>\r\n\r\n            <div className='flex flex-row '>\r\n                <img src={MetroLogo} alt='Metro Saint Louis Logo'></img>\r\n                <h2 className='text-2xl text-bold'>Metro Saint Louis</h2>\r\n            </div>\r\n\r\n            <button id=\"sign-in\" class=\"flex w-20\" onClick={getToken}>\r\n                <img id=\"sign-in-icon\" src={loginIcon} alt='signin'  />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport './tailwind.min.css'\nimport React, {useState, useEffect} from 'react';\nimport Dashboard from './component/Dashboard';\nimport TopBar from './component/TopBar';\n\nfunction App() {\n  const [signedIn, setSignedIn] = useState(false);\n  const [user, setUser] = useState('');\n  const [token, setToken] = useState('');\n  \n\n  return (\n    <div className=\"App\">\n        <TopBar signedIn={signedIn} user={user}  setUser={setUser} token={token} setSignedIn={setSignedIn} setToken={setToken} />\n        <Dashboard token={token} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}